########################################################
### logger config:
########################################################
log4j.logger.org.springframework.scheduling=INFO
logging.file=${spring.application.name}.log

########################################################
### application config:
########################################################
spring.application.name=microservice-gateway-server

########################################################
### servlet container config:
########################################################
server.port=8080
server.ssl.enabled=false
server.session.persistent=true
server.session.timeout=1800
server.session.store-dir=/sessiontmp

########################################################
### eureka config:
########################################################
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.appname=${spring.application.name}

########################################################
### spring devtools:
########################################################
spring.devtools.restart.enabled: true
spring.devtools.restart.exclude: WEB-INF/**

########################################################
### spring mvc config:
########################################################
spring.mvc.view.prefix=/templates/

########################################################
### freemarker config:
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=false
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.suffix=.ftl
spring.freemarker.suffix=.html
#spring.freemarker.template-loader-path=classpath:/templates/ #comma-separated list
#spring.freemarker.view-names= # whitelist of view names that can be resolved

########################################################
### datasource config:
########################################################
###spring.datasource.url=
spring.datasource.url=
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

########################################################
### druid config:
########################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall,log4j
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true
spring.datasource.druid.statViewServlet.enabled=true
spring.datasource.druid.statViewServlet.urlPattern=/druid/*
spring.datasource.druid.statViewServlet.allow=127.0.0.1
spring.datasource.druid.statViewServlet.deny=
spring.datasource.druid.statViewServlet.loginUsername=admin
spring.datasource.druid.statViewServlet.loginPassword=admin
spring.datasource.druid.statViewServlet.resetEnable=true
spring.datasource.druid.webStatFilter.enabled=true
spring.datasource.druid.webStatFilter.urlPattern=/*
spring.datasource.druid.webStatFilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*,/download/*
spring.datasource.druid.webStatFilter.sessionStatMaxCount=2000
spring.datasource.druid.webStatFilter.sessionStatEnable=true
spring.datasource.druid.webStatFilter.principalSessionName=session_user_key
spring.datasource.druid.webStatFilter.principalCookieName=cookie_user_key
spring.datasource.druid.webStatFilter.profileEnable=true

########################################################
### mybatis:
########################################################
# 配置类型别名
mybatis.type-aliases-package=com.microservice.**.pojo
# 配置mapper的扫描，找到所有的mapper.xml映射文件
mybatis.mapper-locations=classpath:mybatis/mapper/*Mapper.xml
# 加载全局的配置文件
mybatis.config-location=classpath:mybatis/mybatis-config.xml

########################################################
### pagehelper:
########################################################
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

########################################################
### servlet container kaptcha config:
########################################################
kaptcha.session.key=kaptcha.code
kaptcha.border=no
kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.WaterRipple
kaptcha.noise.impl=com.google.code.kaptcha.impl.NoNoise
kaptcha.image.width=90
kaptcha.image.height=33
kaptcha.textproducer.font.size=25
kaptcha.textproducer.font.color=black
kaptcha.textproducer.char.length=4
kaptcha.textproducer.char.space=5
kaptcha.background.clear.from=238,238,238
kaptcha.background.clear.to=238,238,238
kaptcha.allow.nocode.login.number=3


########################################################
### hystrix feign config:
########################################################
### ribbon 
# 请求连接的超时时间
ribbon.ConnectTimeout=3000
# 请求处理的超时时间
ribbon.ReadTimeout=3000
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
# 启路由重试功能：对当前服务的重试次数,zuul.retryable=true时有效
ribbon.MaxAutoRetries=2
# 启路由重试功能：切换相同Server的次数,zuul.retryable=true时有效
ribbon.MaxAutoRetriesNextServer=1
# 刷新服务器列表的时间间隔  
ribbon.ServerListRefreshInterval=2000

### hystrix 
# hystrix 熔断机制 ,feign.hystrix.enabled=true时有效
hystrix.shareSecurityContext=true
# 强制断路器进入关闭状态,true允许所有的请求，无视错误率
hystrix.command.default.circuitBreaker.forceClosed=true
# 熔断后的重试时间窗口
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=100000
#配置断路器中的隔离策略为信号量,SEMAPHORE必须大写
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 配置断路器中的信号量大小
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=1000
# 是否开启
hystrix.command.default.execution.enabled=true
# 是否有超时限制
hystrix.command.default.execution.timeout.enabled=true
# hystrix级全局的超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

### feign 
# 配置Hystrix熔断机制服务降级
feign.hystrix.enabled=true
# 配置请求GZIP压缩
feign.compression.request.enabled=true
# 配置响应GZIP压缩
feign.compression.response.enabled=true
# 配置压缩支持的MIME TYPE
feign.compression.request.mime-types=text/xml,application/xml,application/json
# 配置压缩数据大小的下限
feign.compression.request.min-request-size=2048

########################################################
###zuul config:
########################################################
# 是否开启路由重试功能,需结合Spring Retry 实现
zuul.retryable=true
# 配置隔离策略为信号量
zuul.ribbon-isolation-strategy=semaphore
# 设置默认最大信号量,指的是1秒时间窗口内的事务/查询/请求,默认值100
zuul.semaphore.max-semaphores=1000
# Zuul请求并发参数,每个服务的http客户端连接池最大连接,默认值200
zuul.host.maxTotalConnections=1000
# Zuul请求并发参数,每个route可用的最大连接数,默认值20
zuul.host.maxPerRouteConnections=500
# 网关级的超时
zuul.host.socket-timeout-millis=60000
# 网关级的超时
zuul.host.connect-timeout-millis=60000
# 是否禁用指定的Filter,SendResponseFilter
zuul.SendResponseFilter.post.disable=false
# 是否禁用指定的Filter,SendErrorFilter处理有错误的请求响应过滤器
zuul.SendErrorFilter.post.disable=true

########################################################
### redis config:
########################################################